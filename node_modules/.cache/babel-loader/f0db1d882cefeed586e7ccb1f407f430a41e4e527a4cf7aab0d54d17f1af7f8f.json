{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttutorial\\\\awesomeapp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// let count=1;                      /// in this way we cannot change the value of the count on clicking the button ..,We use usestate to solve the problem\n// function Incrementfunction(){\n// console.log(\"Clicked\");\n// count ++;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Incrementfunction() {\n  setcount++;\n}\n_c = Incrementfunction;\nfunction App() {\n  _s();\n  const state = useState();\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Incrementfunction,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"0PZvHIERtuQk4WP43fbiJNtWrWc=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Incrementfunction\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Incrementfunction","setcount","_c","App","_s","state","count","setCount","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c2","$RefreshReg$"],"sources":["D:/reacttutorial/awesomeapp/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n// let count=1;                      /// in this way we cannot change the value of the count on clicking the button ..,We use usestate to solve the problem\r\n// function Incrementfunction(){\r\n// console.log(\"Clicked\");\r\n// count ++;\r\n// }\r\nfunction Incrementfunction(){\r\n\r\nsetcount ++;\r\n}\r\n\r\n\r\n\r\nfunction App(){\r\nconst state =useState();\r\nconst[count,setCount]=useState(0);\r\n\r\n\r\n    return (\r\n<>\r\n<h1>{count}</h1>\r\n\r\n<button  onClick={Incrementfunction}>Click Me</button>\r\n\r\n</>\r\n\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,iBAAiBA,CAAA,EAAE;EAE5BC,QAAQ,EAAG;AACX;AAACC,EAAA,GAHQF,iBAAiB;AAO1B,SAASG,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACd,MAAMC,KAAK,GAAEV,QAAQ,EAAE;EACvB,MAAK,CAACW,KAAK,EAACC,QAAQ,CAAC,GAACZ,QAAQ,CAAC,CAAC,CAAC;EAG7B,oBACJE,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACAX,OAAA;MAAAW,QAAA,EAAKF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAEhBf,OAAA;MAASgB,OAAO,EAAEb,iBAAkB;MAAAQ,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAEnD;AAGH;AAACR,EAAA,CAdQD,GAAG;AAAAW,GAAA,GAAHX,GAAG;AAgBZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}