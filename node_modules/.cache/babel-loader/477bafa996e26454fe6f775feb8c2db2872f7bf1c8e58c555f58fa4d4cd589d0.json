{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttutorial\\\\awesomeapp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// let count=1;                      /// in this way we cannot change the value of the count on clicking the button ..,We use usestate to solve the problem\n// function Incrementfunction(){\n// console.log(\"Clicked\");\n// count ++;\n// }\n\n///usestate must be written in function \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const state = useState();\n  const [count, setCount] = useState(0);\n  function Incrementfunction() {\n    setCount(count + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Incrementfunction,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"0PZvHIERtuQk4WP43fbiJNtWrWc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","state","count","setCount","Incrementfunction","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/reacttutorial/awesomeapp/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// let count=1;                      /// in this way we cannot change the value of the count on clicking the button ..,We use usestate to solve the problem\r\n// function Incrementfunction(){\r\n// console.log(\"Clicked\");\r\n// count ++;\r\n// }\r\n\r\n///usestate must be written in function \r\n\r\nfunction App(){\r\nconst state =useState();\r\nconst[count,setCount]=useState(0);\r\n\r\nfunction Incrementfunction(){\r\n\r\n    setCount (count + 1);\r\n    }\r\n    \r\n    return (\r\n<>\r\n<h1>{count}</h1>\r\n<button  onClick={Incrementfunction}>Click Me</button>\r\n\r\n</>\r\n\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACd,MAAMC,KAAK,GAAEP,QAAQ,EAAE;EACvB,MAAK,CAACQ,KAAK,EAACC,QAAQ,CAAC,GAACT,QAAQ,CAAC,CAAC,CAAC;EAEjC,SAASU,iBAAiBA,CAAA,EAAE;IAExBD,QAAQ,CAAED,KAAK,GAAG,CAAC,CAAC;EACpB;EAEA,oBACJN,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACAT,OAAA;MAAAS,QAAA,EAAKH;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAChBb,OAAA;MAASc,OAAO,EAAEN,iBAAkB;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAEnD;AAGH;AAACT,EAAA,CAjBQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}