{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttutorial\\\\awesomeapp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// let count=1;                      /// in this way we cannot change the value of the count on clicking the button ..,We use usestate to solve the problem\n// function Incrementfunction(){\n// console.log(\"Clicked\");\n// count ++;\n// }\n\n// //usestate must be written in function \n\n// function App(){\n// // const state =useState();\n// const[count,setCount]=useState(0);\n\n// function Incrementfunction(){\n\n//     setCount (count + 1);\n//     }\n\n//     return (\n// <>\n// <h1>{count}</h1>\n\n// <button  onClick={Incrementfunction}>Click Me</button>\n\n// </>\n\n//     );\n// }\n\n/////********************************************************************************************************************************************////\n\n// function App(){\n\n//     // const state =useState();\n\n//     const[currtime,setCount]=useState(new Date().toLocaleTimeString());\n\n//     function Incrementfunction(){\n\n//         setCount (new Date().toLocaleTimeString());\n//         }\n//         setInterval(Incrementfunction,1000);  ////// IT IS USE for digital clock ,it call increment function after every 1000 milisecond. \n//         return (\n//     <>\n//     <h1>{currtime}</h1>\n\n//     {/* <button  onClick={Incrementfunction}>Get Time</button> */}\n\n//     </>\n\n//         );\n//     }\n\n//     export default App;\n\n//////////**************************************************************************************************************************** */////////////\n// function App(){\n\n// const[bg,setData]=useState(\"red\");\n// const[name,setName]=useState(\"hiiüñêüñê\");\n\n// function changeBg(){\n// let cc=\"purple\";\n// setData(cc);\n// setName(\"ByeüéÖü§∂\");\n\n// }\n\n// function changedouble(){\n//     setData(\"yellow\");\n//     setName(\"goodüë±‚Äç‚ôÄÔ∏è\");\n// }\n\n// return(\n// <>\n// <div style={{background:bg}}>\n// <button onClick={changeBg}   onDoubleClick={changedouble}> {name}</button>\n// </div>\n// </>\n// );\n\n// };\n\n// export default App;\n\n///////////////////////////////////////****************************************************************************************** *//////////////////\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [name, setName] = useState();\n  let kk = \"\";\n  function ritul(event) {\n    console.log(event.target.value);\n    // setName(event.target.value);\n    kk = event.target.value;\n  }\n  function ritulsubmit() {\n    setName(kk);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        onChange: ritul\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: ritulsubmit,\n        children: \"Click Me \\uD83D\\uDC4D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"tM2YBx9dq0pEEL4vxUK9iLbk07s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","name","setName","kk","ritul","event","console","log","target","value","ritulsubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/reacttutorial/awesomeapp/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// let count=1;                      /// in this way we cannot change the value of the count on clicking the button ..,We use usestate to solve the problem\r\n// function Incrementfunction(){\r\n// console.log(\"Clicked\");\r\n// count ++;\r\n// }\r\n\r\n// //usestate must be written in function \r\n\r\n// function App(){\r\n// // const state =useState();\r\n// const[count,setCount]=useState(0);\r\n\r\n// function Incrementfunction(){\r\n\r\n//     setCount (count + 1);\r\n//     }\r\n    \r\n//     return (\r\n// <>\r\n// <h1>{count}</h1>\r\n\r\n// <button  onClick={Incrementfunction}>Click Me</button>\r\n\r\n// </>\r\n\r\n//     );\r\n// }\r\n\r\n/////********************************************************************************************************************************************////\r\n\r\n// function App(){\r\n   \r\n//     // const state =useState();\r\n  \r\n//     const[currtime,setCount]=useState(new Date().toLocaleTimeString());\r\n    \r\n//     function Incrementfunction(){\r\n       \r\n//         setCount (new Date().toLocaleTimeString());\r\n//         }\r\n//         setInterval(Incrementfunction,1000);  ////// IT IS USE for digital clock ,it call increment function after every 1000 milisecond. \r\n//         return (\r\n//     <>\r\n//     <h1>{currtime}</h1>\r\n    \r\n//     {/* <button  onClick={Incrementfunction}>Get Time</button> */}\r\n    \r\n//     </>\r\n    \r\n//         );\r\n//     }\r\n    \r\n//     export default App;\r\n\r\n//////////**************************************************************************************************************************** */////////////\r\n// function App(){\r\n\r\n// const[bg,setData]=useState(\"red\");\r\n// const[name,setName]=useState(\"hiiüñêüñê\");\r\n\r\n// function changeBg(){\r\n// let cc=\"purple\";\r\n// setData(cc);\r\n// setName(\"ByeüéÖü§∂\");\r\n\r\n// }\r\n\r\n// function changedouble(){\r\n//     setData(\"yellow\");\r\n//     setName(\"goodüë±‚Äç‚ôÄÔ∏è\");\r\n// }\r\n\r\n// return(\r\n// <>\r\n// <div style={{background:bg}}>\r\n// <button onClick={changeBg}   onDoubleClick={changedouble}> {name}</button>\r\n// </div>\r\n// </>\r\n// );\r\n\r\n// };\r\n\r\n// export default App;\r\n\r\n///////////////////////////////////////****************************************************************************************** *//////////////////\r\n\r\n\r\nfunction App(){\r\nconst[name,setName]=useState();\r\nlet kk=\"\";\r\nfunction ritul (event){\r\nconsole.log(event.target.value);\r\n// setName(event.target.value);\r\nkk=event.target.value;\r\n}\r\n\r\nfunction ritulsubmit(){\r\n    \r\n    setName(kk);\r\n\r\n}\r\n\r\n    return (\r\n<>\r\n<div>\r\n<h1>Hello {name}</h1>\r\n<input type=\"text\" placeholder=\"Enter your name\"\r\n    onChange={ritul}\r\n/>\r\n\r\n<button onClick={ritulsubmit}>Click Me üëç</button>\r\n\r\n\r\n</div>\r\n\r\n\r\n</>\r\n\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGA,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACd,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAACR,QAAQ,EAAE;EAC9B,IAAIS,EAAE,GAAC,EAAE;EACT,SAASC,KAAKA,CAAEC,KAAK,EAAC;IACtBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IAC/B;IACAN,EAAE,GAACE,KAAK,CAACG,MAAM,CAACC,KAAK;EACrB;EAEA,SAASC,WAAWA,CAAA,EAAE;IAElBR,OAAO,CAACC,EAAE,CAAC;EAEf;EAEI,oBACJP,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACAf,OAAA;MAAAe,QAAA,gBACAf,OAAA;QAAAe,QAAA,GAAI,QAAM,EAACV,IAAI;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACrBnB,OAAA;QAAOoB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,iBAAiB;QAC5CC,QAAQ,EAAEd;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClB,eAEFnB,OAAA;QAAQuB,OAAO,EAAET,WAAY;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAG5C,iBAGH;AAGH;AAACf,EAAA,CAhCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}