{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _assert = require(\"assert\");\nvar _t = require(\"@babel/types\");\nvar _importBuilder = require(\"./import-builder\");\nvar _isModule = require(\"./is-module\");\nconst {\n  numericLiteral,\n  sequenceExpression\n} = _t;\nclass ImportInjector {\n  constructor(path, importedSource, opts) {\n    this._defaultOpts = {\n      importedSource: null,\n      importedType: \"commonjs\",\n      importedInterop: \"babel\",\n      importingInterop: \"babel\",\n      ensureLiveReference: false,\n      ensureNoContext: false,\n      importPosition: \"before\"\n    };\n    const programPath = path.find(p => p.isProgram());\n    this._programPath = programPath;\n    this._programScope = programPath.scope;\n    this._hub = programPath.hub;\n    this._defaultOpts = this._applyDefaults(importedSource, opts, true);\n  }\n  addDefault(importedSourceIn, opts) {\n    return this.addNamed(\"default\", importedSourceIn, opts);\n  }\n  addNamed(importName, importedSourceIn, opts) {\n    _assert(typeof importName === \"string\");\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), importName);\n  }\n  addNamespace(importedSourceIn, opts) {\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), null);\n  }\n  addSideEffect(importedSourceIn, opts) {\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), void 0);\n  }\n  _applyDefaults(importedSource, opts) {\n    let isInit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let newOpts;\n    if (typeof importedSource === \"string\") {\n      newOpts = Object.assign({}, this._defaultOpts, {\n        importedSource\n      }, opts);\n    } else {\n      _assert(!opts, \"Unexpected secondary arguments.\");\n      newOpts = Object.assign({}, this._defaultOpts, importedSource);\n    }\n    if (!isInit && opts) {\n      if (opts.nameHint !== undefined) newOpts.nameHint = opts.nameHint;\n      if (opts.blockHoist !== undefined) newOpts.blockHoist = opts.blockHoist;\n    }\n    return newOpts;\n  }\n  _generateImport(opts, importName) {\n    const isDefault = importName === \"default\";\n    const isNamed = !!importName && !isDefault;\n    const isNamespace = importName === null;\n    const {\n      importedSource,\n      importedType,\n      importedInterop,\n      importingInterop,\n      ensureLiveReference,\n      ensureNoContext,\n      nameHint,\n      importPosition,\n      blockHoist\n    } = opts;\n    let name = nameHint || importName;\n    const isMod = (0, _isModule.default)(this._programPath);\n    const isModuleForNode = isMod && importingInterop === \"node\";\n    const isModuleForBabel = isMod && importingInterop === \"babel\";\n    if (importPosition === \"after\" && !isMod) {\n      throw new Error(`\"importPosition\": \"after\" is only supported in modules`);\n    }\n    const builder = new _importBuilder.default(importedSource, this._programScope, this._hub);\n    if (importedType === \"es6\") {\n      if (!isModuleForNode && !isModuleForBabel) {\n        throw new Error(\"Cannot import an ES6 module from CommonJS\");\n      }\n      builder.import();\n      if (isNamespace) {\n        builder.namespace(nameHint || importedSource);\n      } else if (isDefault || isNamed) {\n        builder.named(name, importName);\n      }\n    } else if (importedType !== \"commonjs\") {\n      throw new Error(`Unexpected interopType \"${importedType}\"`);\n    } else if (importedInterop === \"babel\") {\n      if (isModuleForNode) {\n        name = name !== \"default\" ? name : importedSource;\n        const es6Default = `${importedSource}$es6Default`;\n        builder.import();\n        if (isNamespace) {\n          builder.default(es6Default).var(name || importedSource).wildcardInterop();\n        } else if (isDefault) {\n          if (ensureLiveReference) {\n            builder.default(es6Default).var(name || importedSource).defaultInterop().read(\"default\");\n          } else {\n            builder.default(es6Default).var(name).defaultInterop().prop(importName);\n          }\n        } else if (isNamed) {\n          builder.default(es6Default).read(importName);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n        if (isNamespace) {\n          builder.var(name || importedSource).wildcardInterop();\n        } else if ((isDefault || isNamed) && ensureLiveReference) {\n          if (isDefault) {\n            name = name !== \"default\" ? name : importedSource;\n            builder.var(name).read(importName);\n            builder.defaultInterop();\n          } else {\n            builder.var(importedSource).read(importName);\n          }\n        } else if (isDefault) {\n          builder.var(name).defaultInterop().prop(importName);\n        } else if (isNamed) {\n          builder.var(name).prop(importName);\n        }\n      }\n    } else if (importedInterop === \"compiled\") {\n      if (isModuleForNode) {\n        builder.import();\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault || isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.prop(importName).var(name);\n          }\n        }\n      }\n    } else if (importedInterop === \"uncompiled\") {\n      if (isDefault && ensureLiveReference) {\n        throw new Error(\"No live reference for commonjs default\");\n      }\n      if (isModuleForNode) {\n        builder.import();\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault) {\n          builder.var(name);\n        } else if (isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.var(name).prop(importName);\n          }\n        }\n      }\n    } else {\n      throw new Error(`Unknown importedInterop \"${importedInterop}\".`);\n    }\n    const {\n      statements,\n      resultName\n    } = builder.done();\n    this._insertStatements(statements, importPosition, blockHoist);\n    if ((isDefault || isNamed) && ensureNoContext && resultName.type !== \"Identifier\") {\n      return sequenceExpression([numericLiteral(0), resultName]);\n    }\n    return resultName;\n  }\n  _insertStatements(statements) {\n    let importPosition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"before\";\n    let blockHoist = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n    const body = this._programPath.get(\"body\");\n    if (importPosition === \"after\") {\n      for (let i = body.length - 1; i >= 0; i--) {\n        if (body[i].isImportDeclaration()) {\n          body[i].insertAfter(statements);\n          return;\n        }\n      }\n    } else {\n      statements.forEach(node => {\n        node._blockHoist = blockHoist;\n      });\n      const targetPath = body.find(p => {\n        const val = p.node._blockHoist;\n        return Number.isFinite(val) && val < 4;\n      });\n      if (targetPath) {\n        targetPath.insertBefore(statements);\n        return;\n      }\n    }\n    this._programPath.unshiftContainer(\"body\", statements);\n  }\n}\nexports.default = ImportInjector;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_assert","require","_t","_importBuilder","_isModule","numericLiteral","sequenceExpression","ImportInjector","constructor","path","importedSource","opts","_defaultOpts","importedType","importedInterop","importingInterop","ensureLiveReference","ensureNoContext","importPosition","programPath","find","p","isProgram","_programPath","_programScope","scope","_hub","hub","_applyDefaults","addDefault","importedSourceIn","addNamed","importName","_generateImport","addNamespace","addSideEffect","isInit","arguments","length","undefined","newOpts","assign","nameHint","blockHoist","isDefault","isNamed","isNamespace","name","isMod","isModuleForNode","isModuleForBabel","Error","builder","import","namespace","named","es6Default","var","wildcardInterop","defaultInterop","read","prop","statements","resultName","done","_insertStatements","type","body","get","i","isImportDeclaration","insertAfter","forEach","node","_blockHoist","targetPath","val","Number","isFinite","insertBefore","unshiftContainer"],"sources":["D:/reacttutorial/awesomeapp/node_modules/@babel/helper-module-imports/lib/import-injector.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require(\"assert\");\n\nvar _t = require(\"@babel/types\");\n\nvar _importBuilder = require(\"./import-builder\");\n\nvar _isModule = require(\"./is-module\");\n\nconst {\n  numericLiteral,\n  sequenceExpression\n} = _t;\n\nclass ImportInjector {\n  constructor(path, importedSource, opts) {\n    this._defaultOpts = {\n      importedSource: null,\n      importedType: \"commonjs\",\n      importedInterop: \"babel\",\n      importingInterop: \"babel\",\n      ensureLiveReference: false,\n      ensureNoContext: false,\n      importPosition: \"before\"\n    };\n    const programPath = path.find(p => p.isProgram());\n    this._programPath = programPath;\n    this._programScope = programPath.scope;\n    this._hub = programPath.hub;\n    this._defaultOpts = this._applyDefaults(importedSource, opts, true);\n  }\n\n  addDefault(importedSourceIn, opts) {\n    return this.addNamed(\"default\", importedSourceIn, opts);\n  }\n\n  addNamed(importName, importedSourceIn, opts) {\n    _assert(typeof importName === \"string\");\n\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), importName);\n  }\n\n  addNamespace(importedSourceIn, opts) {\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), null);\n  }\n\n  addSideEffect(importedSourceIn, opts) {\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), void 0);\n  }\n\n  _applyDefaults(importedSource, opts, isInit = false) {\n    let newOpts;\n\n    if (typeof importedSource === \"string\") {\n      newOpts = Object.assign({}, this._defaultOpts, {\n        importedSource\n      }, opts);\n    } else {\n      _assert(!opts, \"Unexpected secondary arguments.\");\n\n      newOpts = Object.assign({}, this._defaultOpts, importedSource);\n    }\n\n    if (!isInit && opts) {\n      if (opts.nameHint !== undefined) newOpts.nameHint = opts.nameHint;\n      if (opts.blockHoist !== undefined) newOpts.blockHoist = opts.blockHoist;\n    }\n\n    return newOpts;\n  }\n\n  _generateImport(opts, importName) {\n    const isDefault = importName === \"default\";\n    const isNamed = !!importName && !isDefault;\n    const isNamespace = importName === null;\n    const {\n      importedSource,\n      importedType,\n      importedInterop,\n      importingInterop,\n      ensureLiveReference,\n      ensureNoContext,\n      nameHint,\n      importPosition,\n      blockHoist\n    } = opts;\n    let name = nameHint || importName;\n    const isMod = (0, _isModule.default)(this._programPath);\n    const isModuleForNode = isMod && importingInterop === \"node\";\n    const isModuleForBabel = isMod && importingInterop === \"babel\";\n\n    if (importPosition === \"after\" && !isMod) {\n      throw new Error(`\"importPosition\": \"after\" is only supported in modules`);\n    }\n\n    const builder = new _importBuilder.default(importedSource, this._programScope, this._hub);\n\n    if (importedType === \"es6\") {\n      if (!isModuleForNode && !isModuleForBabel) {\n        throw new Error(\"Cannot import an ES6 module from CommonJS\");\n      }\n\n      builder.import();\n\n      if (isNamespace) {\n        builder.namespace(nameHint || importedSource);\n      } else if (isDefault || isNamed) {\n        builder.named(name, importName);\n      }\n    } else if (importedType !== \"commonjs\") {\n      throw new Error(`Unexpected interopType \"${importedType}\"`);\n    } else if (importedInterop === \"babel\") {\n      if (isModuleForNode) {\n        name = name !== \"default\" ? name : importedSource;\n        const es6Default = `${importedSource}$es6Default`;\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(es6Default).var(name || importedSource).wildcardInterop();\n        } else if (isDefault) {\n          if (ensureLiveReference) {\n            builder.default(es6Default).var(name || importedSource).defaultInterop().read(\"default\");\n          } else {\n            builder.default(es6Default).var(name).defaultInterop().prop(importName);\n          }\n        } else if (isNamed) {\n          builder.default(es6Default).read(importName);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource).wildcardInterop();\n        } else if ((isDefault || isNamed) && ensureLiveReference) {\n          if (isDefault) {\n            name = name !== \"default\" ? name : importedSource;\n            builder.var(name).read(importName);\n            builder.defaultInterop();\n          } else {\n            builder.var(importedSource).read(importName);\n          }\n        } else if (isDefault) {\n          builder.var(name).defaultInterop().prop(importName);\n        } else if (isNamed) {\n          builder.var(name).prop(importName);\n        }\n      }\n    } else if (importedInterop === \"compiled\") {\n      if (isModuleForNode) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault || isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.prop(importName).var(name);\n          }\n        }\n      }\n    } else if (importedInterop === \"uncompiled\") {\n      if (isDefault && ensureLiveReference) {\n        throw new Error(\"No live reference for commonjs default\");\n      }\n\n      if (isModuleForNode) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault) {\n          builder.var(name);\n        } else if (isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.var(name).prop(importName);\n          }\n        }\n      }\n    } else {\n      throw new Error(`Unknown importedInterop \"${importedInterop}\".`);\n    }\n\n    const {\n      statements,\n      resultName\n    } = builder.done();\n\n    this._insertStatements(statements, importPosition, blockHoist);\n\n    if ((isDefault || isNamed) && ensureNoContext && resultName.type !== \"Identifier\") {\n      return sequenceExpression([numericLiteral(0), resultName]);\n    }\n\n    return resultName;\n  }\n\n  _insertStatements(statements, importPosition = \"before\", blockHoist = 3) {\n    const body = this._programPath.get(\"body\");\n\n    if (importPosition === \"after\") {\n      for (let i = body.length - 1; i >= 0; i--) {\n        if (body[i].isImportDeclaration()) {\n          body[i].insertAfter(statements);\n          return;\n        }\n      }\n    } else {\n      statements.forEach(node => {\n        node._blockHoist = blockHoist;\n      });\n      const targetPath = body.find(p => {\n        const val = p.node._blockHoist;\n        return Number.isFinite(val) && val < 4;\n      });\n\n      if (targetPath) {\n        targetPath.insertBefore(statements);\n        return;\n      }\n    }\n\n    this._programPath.unshiftContainer(\"body\", statements);\n  }\n\n}\n\nexports.default = ImportInjector;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}