{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttutorial\\\\awesomeapp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// let count=1;                      /// in this way we cannot change the value of the count on clicking the button ..,We use usestate to solve the problem\n// function Incrementfunction(){\n// console.log(\"Clicked\");\n// count ++;\n// }\n\n///usestate must be written in function \n\n// function App(){\n// const state =useState();\n// const[count,setCount]=useState(0);\n\n// function Incrementfunction(){\n\n//     setCount (count + 1);\n//     }\n\n//     return (\n// <>\n// <h1>{count}</h1>\n\n// <button  onClick={Incrementfunction}>Click Me</button>\n\n// </>\n\n//     );\n// }\n\n// export default App;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst currtime = new Date().toLocaleTimeString();\nfunction App() {\n  _s();\n  const state = useState();\n  const [currtime, setCount] = useState(currtime);\n  function Incrementfunction() {\n    setCount(currtime);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: currtime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Incrementfunction,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"UArtuPV0/vNLpyqcG3QcjjiXiVI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","currtime","Date","toLocaleTimeString","App","_s","state","setCount","Incrementfunction","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/reacttutorial/awesomeapp/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// let count=1;                      /// in this way we cannot change the value of the count on clicking the button ..,We use usestate to solve the problem\r\n// function Incrementfunction(){\r\n// console.log(\"Clicked\");\r\n// count ++;\r\n// }\r\n\r\n///usestate must be written in function \r\n\r\n// function App(){\r\n// const state =useState();\r\n// const[count,setCount]=useState(0);\r\n\r\n// function Incrementfunction(){\r\n\r\n//     setCount (count + 1);\r\n//     }\r\n    \r\n//     return (\r\n// <>\r\n// <h1>{count}</h1>\r\n\r\n// <button  onClick={Incrementfunction}>Click Me</button>\r\n\r\n// </>\r\n\r\n//     );\r\n// }\r\n\r\n// export default App;\r\nconst currtime =new Date().toLocaleTimeString();function App(){\r\n    const state =useState();\r\n    const[currtime,setCount]=useState(currtime );\r\n    \r\n    function Incrementfunction(){\r\n       \r\n        setCount (currtime);\r\n        }\r\n        \r\n        return (\r\n    <>\r\n    <h1>{currtime}</h1>\r\n    \r\n    <button  onClick={Incrementfunction}>Click Me</button>\r\n    \r\n    </>\r\n    \r\n        );\r\n    }\r\n    \r\n    export default App;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,QAAQ,GAAE,IAAIC,IAAI,EAAE,CAACC,kBAAkB,EAAE;AAAC,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EAC1D,MAAMC,KAAK,GAAEV,QAAQ,EAAE;EACvB,MAAK,CAACK,QAAQ,EAACM,QAAQ,CAAC,GAACX,QAAQ,CAACK,QAAQ,CAAE;EAE5C,SAASO,iBAAiBA,CAAA,EAAE;IAExBD,QAAQ,CAAEN,QAAQ,CAAC;EACnB;EAEA,oBACJH,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACAX,OAAA;MAAAW,QAAA,EAAKR;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAEnBf,OAAA;MAASgB,OAAO,EAAEN,iBAAkB;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAEnD;AAGH;AAACR,EAAA,CAlBoDD,GAAG;AAAAW,EAAA,GAAHX,GAAG;AAoBxD,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}