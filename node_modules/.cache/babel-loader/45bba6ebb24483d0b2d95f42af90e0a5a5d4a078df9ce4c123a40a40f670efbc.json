{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttutorial\\\\awesomeapp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet count = 1; /// in this way we cannot change the value of the count on clicking the button ..,We use usestate to solve the problem\nfunction Incrementfunction() {\n  console.log(\"Clicked\");\n  count++;\n}\n\n//usestate must be written in function \n_c = Incrementfunction;\nfunction App() {\n  _s();\n  const state = useState();\n  const [count, setCount] = useState(0);\n  function Incrementfunction() {\n    setCount(count + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Incrementfunction,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"0PZvHIERtuQk4WP43fbiJNtWrWc=\");\n_c2 = App;\nexport default App;\n\n// function App(){\n\n//     // const state =useState();\n\n//     const[currtime,setCount]=useState();\n\n//     function Incrementfunction(){\n\n//         setCount (currtime);\n//         }\n\n//         return (\n//     <>\n//     <h1>{currtime}</h1>\n\n//     <button  onClick={Incrementfunction}>Click Me</button>\n\n//     </>\n\n//         );\n//     }\n\n//     export default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Incrementfunction\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","count","Incrementfunction","console","log","_c","App","_s","state","setCount","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c2","$RefreshReg$"],"sources":["D:/reacttutorial/awesomeapp/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nlet count=1;                      /// in this way we cannot change the value of the count on clicking the button ..,We use usestate to solve the problem\r\nfunction Incrementfunction(){\r\nconsole.log(\"Clicked\");\r\ncount ++;\r\n}\r\n\r\n//usestate must be written in function \r\n\r\nfunction App(){\r\nconst state =useState();\r\nconst[count,setCount]=useState(0);\r\n\r\nfunction Incrementfunction(){\r\n\r\n    setCount (count + 1);\r\n    }\r\n    \r\n    return (\r\n<>\r\n<h1>{count}</h1>\r\n\r\n<button  onClick={Incrementfunction}>Click Me</button>\r\n\r\n</>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n// function App(){\r\n   \r\n//     // const state =useState();\r\n  \r\n//     const[currtime,setCount]=useState();\r\n    \r\n//     function Incrementfunction(){\r\n       \r\n//         setCount (currtime);\r\n//         }\r\n        \r\n//         return (\r\n//     <>\r\n//     <h1>{currtime}</h1>\r\n    \r\n//     <button  onClick={Incrementfunction}>Click Me</button>\r\n    \r\n//     </>\r\n    \r\n//         );\r\n//     }\r\n    \r\n//     export default App;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,IAAIC,KAAK,GAAC,CAAC,CAAC,CAAsB;AAClC,SAASC,iBAAiBA,CAAA,EAAE;EAC5BC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACtBH,KAAK,EAAG;AACR;;AAEA;AAAAI,EAAA,GALSH,iBAAiB;AAO1B,SAASI,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACd,MAAMC,KAAK,GAAEZ,QAAQ,EAAE;EACvB,MAAK,CAACK,KAAK,EAACQ,QAAQ,CAAC,GAACb,QAAQ,CAAC,CAAC,CAAC;EAEjC,SAASM,iBAAiBA,CAAA,EAAE;IAExBO,QAAQ,CAAER,KAAK,GAAG,CAAC,CAAC;EACpB;EAEA,oBACJH,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACAZ,OAAA;MAAAY,QAAA,EAAKT;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAEhBhB,OAAA;MAASiB,OAAO,EAAEb,iBAAkB;MAAAQ,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAEnD;AAGH;AAACP,EAAA,CAlBQD,GAAG;AAAAU,GAAA,GAAHV,GAAG;AAoBZ,eAAeA,GAAG;;AAElB;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AAAA,IAAAD,EAAA,EAAAW,GAAA;AAAAC,YAAA,CAAAZ,EAAA;AAAAY,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}